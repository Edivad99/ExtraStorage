import se.bjurr.gitchangelog.plugin.gradle.GitChangelogTask
import static org.apache.commons.lang3.StringUtils.repeat

plugins {
    id 'eclipse'
    id 'idea'
    id 'net.neoforged.gradle' version '[6.0.18,6.2)'
    id 'org.parchmentmc.librarian.forgegradle' version '1.+'
    id 'se.bjurr.gitchangelog.git-changelog-gradle-plugin' version '1.80.0'
    id 'me.modmuss50.mod-publish-plugin' version '0.3.3'
}

version = "$minecraft_version-$mod_version"
group = 'edivad.extrastorage'
base.archivesName = 'ExtraStorage'

java.toolchain.languageVersion = JavaLanguageVersion.of(17)

println(repeat('*', 60))
println("Project Version: $version")
println("Java: ${System.getProperty('java.version')}")
println("JVM: ${System.getProperty('java.vm.version')} (${System.getProperty('java.vendor')})")
println("Arch: ${System.getProperty('os.arch')}")
println(repeat('*', 60))

minecraft {
    mappings channel: mappings_channel, version: mappings_version

    copyIdeResources = true

    accessTransformer = file('src/main/resources/META-INF/accesstransformer.cfg')

    runs {
        configureEach {
            property 'forge.logging.console.level', 'debug'

            mods {
                extrastorage {
                    source sourceSets.main
                }
            }
        }

        client {
            workingDirectory project.file('run/client')
        }

        server {
            workingDirectory project.file('run/server')
        }

        data {
            workingDirectory project.file('run/data')

            args '--mod', 'extrastorage', '--all', '--output', file('src/generated/resources/'), '--existing', file('src/main/resources/')
        }
    }
}

sourceSets.main.resources { srcDir 'src/generated/resources' }

repositories {
    maven {
        name 'TOP'
        url 'https://maven.k-4u.nl'
    }
    maven {
        name 'JEI/CarryOn'
        url 'https://maven.blamejared.com/'
    }
    maven {
        name 'RS maven'
        url = uri('https://maven.pkg.github.com/refinedmods/refinedstorage')
        credentials {
            username = 'anything'
            password = '\u0067hp_oGjcDFCn8jeTzIj4Ke9pLoEVtpnZMP4VQgaX'
        }
    }
    maven {
        name 'curseforge'
        url 'https://www.cursemaven.com'
    }
}

dependencies {
    minecraft group: 'net.neoforged', name: 'forge', version: "$minecraft_version-$neo_version"

    implementation fg.deobf("curse.maven:edivadlib-638508:$edivadlib_id")

    implementation fg.deobf("com.refinedmods:refinedstorage:$rs_version") {
        transitive false
    }
    implementation fg.deobf("mcjty.theoneprobe:theoneprobe:$top_version") {
        transitive false
    }
    /*implementation fg.deobf("tschipp.carryon:carryon-forge-$minecraft_version:$co_version") {
        transitive false
    }*/
    runtimeOnly fg.deobf("mezz.jei:jei-$minecraft_version-forge:$jei_version")
    //implementation fg.deobf("curse.maven:mekanism-268560:4041164")
}

tasks.withType(JavaCompile).configureEach {
    options.encoding = 'UTF-8' // Use the UTF-8 charset for Java compilation
}

tasks.withType(ProcessResources).configureEach {
    var replaceProperties = [
            mod_version: mod_version
    ]
    inputs.properties replaceProperties

    filesMatching(['META-INF/mods.toml', 'pack.mcmeta']) {
        expand replaceProperties + [project: project]
    }
}

tasks.named('jar', Jar).configure {
    manifest {
        attributes([
            'Specification-Title'       : 'extrastorage',
            'Specification-Vendor'      : 'Edivad99',
            'Specification-Version'     : '1',
            'Implementation-Title'      : 'extrastorage',
            'Implementation-Version'    : project.version,
            'Implementation-Vendor'     : 'Edivad99',
            'Implementation-Commit'     : 'git rev-parse HEAD'.execute().text.trim(),
            'Implementation-Timestamp'  : new Date().format("yyyy-MM-dd'T'HH:mm:ssZ")
        ])
    }
    finalizedBy 'reobfJar'
}

tasks.register('makeChangelog', GitChangelogTask) {
    fromRepo = projectDir.absolutePath.toString()
    fromRevision = '0993b5d0ea34a2b5be832da1c060e7b1ce21e788'
    toRevision = 'HEAD'
    file = file('CHANGELOG.md')
    untaggedName = 'Next release'
    templateContent = file('changelog.mustache').text
}

publishMods {
    displayName = "ExtraStorage-$minecraft_version-$mod_version"
    version = mod_version
    type = STABLE

    def changelogFile = file('CHANGELOG.md')
    changelog = changelogFile.exists() ? changelogFile.text : 'CHANGELOG.md not found'

    modLoaders.add('neoforge')
    if (minecraft_version.equals('1.20.1')) {
        modLoaders.add('forge')
    }
    file = jar.archiveFile

    curseforge {
        projectId = '410168'
        accessToken = providers.environmentVariable('CURSEFORGE_TOKEN')
        minecraftVersions.add(minecraft_version)
        requires {
            slug = 'edivadlib'
        }
        requires {
            slug = 'refined-storage'
        }
    }
    modrinth {
        projectId = 'T34cBZKl'
        accessToken = providers.environmentVariable('MODRINTH_TOKEN')
        minecraftVersions.add(minecraft_version)
        requires {
            slug = 'edivadlib'
        }
        requires {
            slug = 'refined-storage'
        }
    }
}
