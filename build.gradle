plugins {
    id 'eclipse'
    id 'maven-publish'
    id 'net.minecraftforge.gradle' version '5.1.+'
}

version = "${mod_version}"
group = 'edivad.extrastorage'
archivesBaseName = "ExtraStorage-${minecraft_version}"

// Mojang ships Java 17 to end users in 1.18+, so your mod should target Java 17.
java.toolchain.languageVersion = JavaLanguageVersion.of(17)
println('Java: ' + System.getProperty('java.version') + ' JVM: ' + System.getProperty('java.vm.version') + '(' + System.getProperty('java.vendor') + ') Arch: ' + System.getProperty('os.arch'))

minecraft {
    mappings channel: 'official', version: "${minecraft_version}"
    // makeObfSourceJar = false // an Srg named sources jar is made by default. uncomment this to disable.

    accessTransformer = file('src/main/resources/META-INF/accesstransformer.cfg')

    runs {
        client {
            workingDirectory project.file('run')

            // Recommended logging data for a userdev environment
            //property 'forge.logging.markers', 'SCAN,REGISTRIES,REGISTRYDUMP'
            property 'forge.logging.markers', 'REGISTRIES'

            // Recommended logging level for the console
            property 'forge.logging.console.level', 'debug'

            mods {
                extrastorage {
                    source sourceSets.main
                }
            }
        }

        server {
            workingDirectory project.file('run')

            // Recommended logging data for a userdev environment
            property 'forge.logging.markers', 'REGISTRIES'

            // Recommended logging level for the console
            property 'forge.logging.console.level', 'debug'

            mods {
                extrastorage {
                    source sourceSets.main
                }
            }
        }

        data {
            workingDirectory project.file('run')

            // Recommended logging data for a userdev environment
            property 'forge.logging.markers', 'REGISTRIES'

            // Recommended logging level for the console
            property 'forge.logging.console.level', 'debug'

            args '--mod', 'extrastorage', '--all', '--output', file('src/generated/resources/'), '--existing', file('src/main/resources/')

            mods {
                extrastorage {
                    source sourceSets.main
                }
            }
        }
    }
}

// Include resources generated by data generators.
sourceSets.main.resources { srcDir 'src/generated/resources' }

repositories {
    maven {
        name 'TOP'
        url 'https://maven.k-4u.nl'
    }
    maven {
        name 'JEI'
        url 'https://dvs1.progwml6.com/files/maven'
    }
    maven {
        name 'RS maven'
        url = uri('https://maven.pkg.github.com/refinedmods/refinedstorage')
        credentials {
            username = 'anything'
            password = '\u0067hp_oGjcDFCn8jeTzIj4Ke9pLoEVtpnZMP4VQgaX'
        }
    }
    maven {
        name 'Carry On'
        url 'https://maven.blamejared.com/'
    }
    maven {
        name 'curseforge'
        url 'https://www.cursemaven.com'
    }
}

dependencies {
    minecraft "net.minecraftforge:forge:${minecraft_version}-${forge_version}"

    implementation fg.deobf("curse.maven:edivadlib-638508:${edivadlib_id}")

    implementation fg.deobf("com.refinedmods:refinedstorage:${rs_version}") {
        transitive false
    }
    implementation fg.deobf("mcjty.theoneprobe:theoneprobe:${top_version}") {
        transitive = false
    }
    /*implementation fg.deobf("tschipp.carryon:carryon-1.19:${co_version}") {
        transitive = false
    }*/
    runtimeOnly fg.deobf("mezz.jei:jei-${minecraft_version}-forge:${jei_version}")
}

// Example for how to get properties into the manifest for reading by the runtime..
jar {
    manifest {
        attributes([
            "Specification-Title": "extrastorage",
            "Specification-Vendor": "extrastorage",
            "Specification-Version": "1",
            "Implementation-Title": project.name,
            "Implementation-Version": project.jar.archiveVersion,
            "Implementation-Vendor" : "extrastorage",
            "Implementation-Timestamp": new Date().format("yyyy-MM-dd'T'HH:mm:ssZ")
        ])
    }
}
